# FROM nvidia/cuda:11.8.0-cudnn8-runtime-ubuntu20.04 AS builder
# WORKDIR /app

# # Install Python 3.9 and build dependencies
# RUN apt-get update && apt-get install -y --no-install-recommends \
#     build-essential \
#     python3.9 \
#     python3.9-dev \
#     python3-pip \
#     python3.9-venv \
#     && rm -rf /var/lib/apt/lists/*

# # Set python3.9 as default
# RUN update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.9 1
# RUN update-alternatives --install /usr/bin/pip3 pip3 /usr/bin/pip3.9 1

# COPY requirements-model.txt .
# RUN pip3 install --no-cache-dir --prefer-binary -r requirements-model.txt
# RUN python3 -m spacy download en_core_web_lg
# COPY classifier/ ./classifier/
# COPY setup.py .

# FROM nvidia/cuda:11.8.0-cudnn8-runtime-ubuntu20.04
# WORKDIR /app

# # Install Python 3.9 runtime dependencies
# RUN apt-get update && apt-get install -y --no-install-recommends \
#     python3.9 \
#     python3-pip \
#     && rm -rf /var/lib/apt/lists/*

# # Set python3.9 as default
# RUN update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.9 1

# COPY --from=builder /usr/local /usr/local
# COPY --from=builder /app /app

# CMD ["python3", "-m", "classifier.compare_models"]

FROM python:3.9-slim AS builder

WORKDIR /app

RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    && rm -rf /var/lib/apt/lists/*

COPY requirements-model.txt .

# pytorch cpu only
RUN echo "--extra-index-url https://download.pytorch.org/whl/cu118" > temp-requirements.txt && \
    cat requirements-model.txt >> temp-requirements.txt && \
    mv temp-requirements.txt requirements-model.txt

RUN pip install --no-cache-dir --prefer-binary -r requirements-model.txt

RUN python -m spacy download en_core_web_lg

COPY classifier/ ./classifier/
COPY setup.py .

FROM python:3.9-slim

WORKDIR /app

COPY --from=builder /usr/local /usr/local
COPY --from=builder /app /app

CMD ["python3", "-m", "classifier.compare_models"]
